package herbert_schildt.chapter_14;

// Продемонстрировать базовый тип
class Gen1<T> {
    T ob;

    // передать конструктору ссылку на объект типа Т
    public Gen1(T ob) {
        this.ob = ob;
    }

    // возвратить объект ob

    public T getOb() {
        return ob;
    }
}

// Продемонстрировать применение базового типа
public class RawDemo {
    public static void main(String[] args) {

        // создать объект типа Gen для целых чисел
        Gen1<Integer> iOb = new Gen1<>(66);

        // создать объект типа Gen для символьных строк
        Gen1<String> sOb = new Gen1<>("Тест обобщений");

        // создать объект базового типа Gen и присвоить ему
        // значение типа Double
        Gen1 raw = new Gen1(new Double(123.3));

        // Требуется приведение типов, поскольку тип неизвестен
        double d = (Double) raw.getOb();
        System.out.println("Значение: " + d);

        /*
        Прииенение базовых типов может вызвать исключения во
        время выполнения. Ниже представлены некоторые тому примеры.
        Следующее приведение типов вызовет ошибку во время выполнения!
         */
        //int i = (Integer) raw.getOb(); // ОШИБКА во время выполнения!

        // Следующее присваивание нарушает типовую безопасность
        sOb = raw; // Верно, но потенциально ошибочно
//        String str = sOb.getOb(); // ОШИБКА во время выполнения!

        // Следующее присваивание также нарушает типовую безопасность
        raw = iOb; // Верно, но потенциально ошибочно
//        d = (Double) raw.getOb(); // ОШИБКА во время выполнения!



    }
}
